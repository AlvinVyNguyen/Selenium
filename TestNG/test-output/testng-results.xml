<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Loan Department" duration-ms="70" started-at="2019-11-06T07:23:14Z" finished-at="2019-11-06T07:23:14Z">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@6fb554cc]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileLoginHomeLoan()[pri:0, instance:test.day4@64616ca2]" name="MobileLoginHomeLoan" class="test.day4"/>
        <method signature="day3.MobileLogincarLoan()[pri:0, instance:test.day3@97e1986]" name="MobileLogincarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Car Loan" duration-ms="69" started-at="2019-11-06T07:23:14Z" finished-at="2019-11-06T07:23:14Z">
      <class name="test.day3">
        <test-method status="PASS" signature="Bfsuite()[pri:0, instance:test.day3@97e1986]" name="Bfsuite" is-config="true" duration-ms="6" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method status="PASS" signature="befoclas()[pri:0, instance:test.day3@97e1986]" name="befoclas" is-config="true" duration-ms="0" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclas -->
        <test-method status="PASS" signature="beforeevery()[pri:0, instance:test.day3@97e1986]" name="beforeevery" is-config="true" duration-ms="0" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method status="PASS" signature="MobileLogincarLoan()[pri:0, instance:test.day3@97e1986]" name="MobileLogincarLoan" duration-ms="4" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogincarLoan -->
        <test-method status="PASS" signature="afterevery()[pri:0, instance:test.day3@97e1986]" name="afterevery" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method status="PASS" signature="beforeevery()[pri:0, instance:test.day3@97e1986]" name="beforeevery" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method status="PASS" signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@97e1986]" name="MobilesignoutcarLoan" duration-ms="2" started-at="2019-11-05T23:23:14Z" data-provider="getData" finished-at="2019-11-05T23:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method status="PASS" signature="afterevery()[pri:0, instance:test.day3@97e1986]" name="afterevery" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method status="PASS" signature="beforeevery()[pri:0, instance:test.day3@97e1986]" name="beforeevery" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method status="PASS" signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@97e1986]" name="MobilesignoutcarLoan" duration-ms="1" started-at="2019-11-05T23:23:14Z" data-provider="getData" finished-at="2019-11-05T23:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method status="PASS" signature="afterevery()[pri:0, instance:test.day3@97e1986]" name="afterevery" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method status="PASS" signature="beforeevery()[pri:0, instance:test.day3@97e1986]" name="beforeevery" is-config="true" duration-ms="0" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method status="PASS" signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@97e1986]" name="MobilesignoutcarLoan" duration-ms="3" started-at="2019-11-05T23:23:14Z" data-provider="getData" finished-at="2019-11-05T23:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method status="PASS" signature="afterevery()[pri:0, instance:test.day3@97e1986]" name="afterevery" is-config="true" duration-ms="10" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method status="PASS" signature="beforeevery()[pri:0, instance:test.day3@97e1986]" name="beforeevery" is-config="true" duration-ms="18" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method status="PASS" signature="WebloginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.day3@97e1986]" name="WebloginCarLoan" duration-ms="6" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method status="PASS" signature="afteclas()[pri:0, instance:test.day3@97e1986]" name="afteclas" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteclas -->
        <test-method status="PASS" signature="afterevery()[pri:0, instance:test.day3@97e1986]" name="afterevery" is-config="true" duration-ms="0" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method status="PASS" signature="afSyite()[pri:0, instance:test.day1@327471b5]" name="afSyite" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSyite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test name="Personal loan" duration-ms="70" started-at="2019-11-06T07:23:14Z" finished-at="2019-11-06T07:23:14Z">
      <class name="test.day4">
        <test-method status="PASS" signature="LoginAPIHomeLoan()[pri:0, instance:test.day4@64616ca2]" name="LoginAPIHomeLoan" duration-ms="3" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method status="PASS" signature="MobileLoginHomeLoan()[pri:0, instance:test.day4@64616ca2]" name="MobileLoginHomeLoan" duration-ms="8" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method status="PASS" signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@64616ca2]" name="WebloginHomeLoan" duration-ms="4" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method status="PASS" signature="prerequiste()[pri:0, instance:test.day2@6fb554cc]" name="prerequiste" is-config="true" duration-ms="0" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method status="PASS" signature="ploan()[pri:0, instance:test.day2@6fb554cc]" name="ploan" duration-ms="3" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method status="FAIL" signature="Demo()[pri:0, instance:test.day1@327471b5]" name="Demo" duration-ms="7" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertTrue(Assert.java:37)
	at org.testng.Assert.assertTrue(Assert.java:47)
	at test.day1.Demo(day1.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:715)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:907)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1237)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="lastexecution()[pri:0, instance:test.day1@327471b5]" name="lastexecution" is-config="true" duration-ms="1" started-at="2019-11-05T23:23:14Z" finished-at="2019-11-05T23:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
